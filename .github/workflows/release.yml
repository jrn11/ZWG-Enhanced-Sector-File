name: release

on:
  release:
    types: [created]

env:
  SITU_OWNER: ronyan
  SITU_REPOSITORY: VATCANSitu

jobs:
  prepare-aeronav:
    name: Prepare AeroNav files
    runs-on: ubuntu-latest

    steps:
      - name: Get latest AeroNav data provider
        run: curl -s http://files.aero-nav.com/AeroNav_CZWG_by_Aerosoft_NavDataPro.txt | grep -A3 'SECTOR_NAME:CZWG NAV_Data' > SectorProvider.txt

      - id: variables
        name: Export variables
        run: |
          echo "::set-output name=data_url::$( sed -n 's/SECTOR_URL://p' SectorProvider.txt )"
          echo "::set-output name=airac_version::$( grep -Po '(?<=SECTOR_VERSION:([0-9]{14})-).[[:digit:]]+(?=-)' SectorProvider.txt | cut -c 1-4 )"
          echo "::set-output name=airac_update_version::$( grep -Po '(?<=SECTOR_VERSION:([0-9]{14})-).[[:digit:]]+(?=-)' SectorProvider.txt | cut -c 5-6 )"

    outputs:
      data_url: ${{ steps.variables.outputs.data_url }}
      airac_version: ${{ steps.variables.outputs.airac_version }}
      airac_update_version: ${{ steps.variables.outputs.airac_update_version }}

  update-navdata:
    name: Update NavData
    needs: prepare-aeronav
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Download and extract sector data
        run: |
          curl -s -H "User-Agent: EuroScope" -o temp.7z ${{ needs.prepare-aeronav.outputs.data_url }}
          7z x temp.7z -y -o/tmp/sector-data >> /dev/null
          rm temp.7z

      - name: Update NavData folder
        run: |
          cp -TR /tmp/sector-data/CZWG/ICAO CZWG/ICAO
          cp -TR /tmp/sector-data/CZWG/NavData CZWG/NavData

      - name: Prepare and insert new data
        run : |
          # Update .sct file
          sed -n "/\[VOR\]/,/^\s*$/p" /tmp/sector-data/*.sct          >> *.sct
          sed -n "/\[NDB\]/,/^\s*$/p" /tmp/sector-data/*.sct          >> *.sct
          sed -n "/\[FIXES\]/,/^\s*$/p" /tmp/sector-data/*.sct        >> *.sct
          sed -n "/\[HIGH AIRWAY\]/,/^\s*$/p" /tmp/sector-data/*.sct  >> *.sct

          # Update ese
          yes | cp -f /tmp/sector-data/*.ese ./*.ese

          # Update name in [INFO]
          awk '/\[INFO\]/{ n=NR+1 } NR==n{ $0="CZWG ${{ needs.prepare-aeronav.outputs.airac_version }}/${{ needs.prepare-aeronav.outputs.airac_update_version }}" }1' *.sct >> /dev/null

      - name: Upload sector data
        uses: actions/upload-artifact@v2
        with:
          name: sector-data
          path: |
            ./
            !.git

  latest-situ-release:
    name: Get latest VATCAN Situ release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get latest release
        working-directory: ${{ runner.temp }}
        run: |
          wget -q \
            $( cd $GITHUB_WORKSPACE/.github/workflows && python3 -c "import functions; print(functions.get_latest_release_download('${{ env.SITU_OWNER }}', '${{ env.SITU_REPOSITORY }}'))" )
          mv *.dll VATCANSitu-latest.dll

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: vatcan-situ-latest
          path: ${{ runner.temp }}/VATCANSitu-latest.dll

  build-situ-source:
    name: Build VATCAN Situ from source
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.SITU_OWNER }}/${{ env.SITU_REPOSITORY }}

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Build artifact
        working-directory: ${{ runner.temp }}
        run: msbuild "${env:GITHUB_WORKSPACE}\VATCANSitu.vcxproj" /p:AssemblyName=VATCANSitu-nightly /p:OutDir=${{ runner.temp }}\

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: vatcan-situ-nightly
          path: ${{ runner.temp }}\VATCANSitu-nightly.dll

  package-files:
    name: Package files
    if: ${{ always() && needs.update-navdata.result != 'failure' && needs.latest-situ-release.result != 'failure' }}
    needs: [ prepare-aeronav, update-navdata, latest-situ-release, build-situ-source ]
    runs-on: ubuntu-latest

    env:
      AIRAC_VERSION: ${{ needs.prepare-aeronav.outputs.airac_version }}
      AIRAC_UPDATE_VERSION: ${{ needs.prepare-aeronav.outputs.airac_update_version }}

    steps:
      - uses: actions/checkout@v2

      - name: Get sector data
        uses: actions/download-artifact@v2
        with:
          name: sector-data

      - name: Get latest VATCAN Situ
        uses: actions/download-artifact@v2
        with:
          name: vatcan-situ-latest
          path: CZWG/Plugins

      - name: Get nightly VATCAN Situ
        uses: actions/download-artifact@v2
        continue-on-error: true
        with:
          name: vatcan-situ-nightly
          path: CZWG/Plugins

      - name: Remove extra directories
        run: |
          rm -R .git
          rm -R .github

      - name: Compress files to archive for full release
        run: |
          zip -qr ${{ runner.temp }}/CZWG_Full_${{ env.AIRAC_VERSION }}_${{ env.AIRAC_UPDATE_VERSION }}.zip *
          7z a ${{ runner.temp }}/CZWG_Full_${{ env.AIRAC_VERSION }}_${{ env.AIRAC_UPDATE_VERSION }}.7z * > /dev/null

      - name: Compress files to archive for update packages
        run : |
          rm CZWG.prf
          rm -R CZWG/Settings
          
          zip -qr ${{ runner.temp }}/CZWG_Update_${{ env.AIRAC_VERSION }}_${{ env.AIRAC_UPDATE_VERSION }}.zip *
          7z a ${{ runner.temp }}/CZWG_Update_${{ env.AIRAC_VERSION }}_${{ env.AIRAC_UPDATE_VERSION }}.7z * > /dev/null

      - name: Upload files to release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: '${{ runner.temp }}/*.zip;${{ runner.temp }}/*.7z'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean artifacts
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            sector-data
            vatcan-situ-latest
            vatcan-situ-nightly